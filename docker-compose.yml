version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}
  esdata1:
    driver: local

services:

  #
  # DB
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER=capitolzen

  neo4j:
    image: neo4j:3.3.0
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: "neo4j/neo4jpw"

  #
  # Cache
  redis:
    image: redis:latest
    ports:
      - "6379"

  #
  # App
  django:
    restart: on-failure
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    env_file:
      - .env
    command: ["./utilities/wait-for-it.sh -t 90", "elasticsearch:9200", "--", "/start-dev.sh"]
    depends_on:
      - postgres
      - mailhog
      - elasticsearch
      - neo4j
    environment:
      - POSTGRES_USER=capitolzen
      - POSTGRES_PASSWORD=capitolzen
      - USE_DOCKER=yes
    volumes:
      - .:/app
    ports:
      - "8080:8000"
    links:
      - postgres
      - redis
      - elasticsearch
      - neo4j

  #
  # Local Development utility for running commands.
  pycharm:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
      - neo4j
    environment:
      - POSTGRES_USER=capitolzen
      - POSTGRES_PASSWORD=capitolzen
    volumes:
      - .:/app
    links:
      - postgres
      - redis
      - elasticsearch
      - neo4j

  #
  # Workers
  celeryworker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    env_file: .env
    environment:
      - POSTGRES_USER=capitolzen
      - POSTGRES_PASSWORD=capitolzen
    depends_on:
     - postgres
     - redis
     - elasticsearch
     - neo4j
    links:
      - postgres
      - redis
      - elasticsearch
      - neo4j
    command: ["./utilities/wait-for-it.sh -t 90", "elasticsearch:9200", "--", celery, -A, capitolzen.tasks, worker, --workdir=/app, --concurrency=4,  -l, INFO]
    volumes:
      - .:/app

  #
  # Beat
  celerybeat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    env_file: .env
    environment:
      - POSTGRES_USER=capitolzen
      - POSTGRES_PASSWORD=capitolzen
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - neo4j
    links:
      - postgres
      - redis
      - elasticsearch
      - neo4j
    command: ["./utilities/wait-for-it.sh -t 90", "elasticsearch:9200", "--", celery, -A, capitolzen.tasks, beat, --workdir=/app, -l, INFO]
    volumes:
      - .:/app

  #
  # Intercepts mail sent and provides a nice UI for debugging.
  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  #
  # Elastic Search
  elasticsearch:
    build:
      context: .
      dockerfile: ./compose/elastic/Dockerfile
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
